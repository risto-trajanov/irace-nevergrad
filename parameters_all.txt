solver "--solver=" c ("CMA-ES","OnePlusOne", "MetaModel", "TBPSA", "Chaining", "SLSQP", "COBYLA", "Nelder-Mead", "L-BFGS-B")
optimizers "--optimizers=" c ("MetaModel_SQP", "CMA_SQP") | solver == "Chaining"
budget_chaining "--budget_chaining=" c ("half", "third") | solver == "Chaining"
naive "--naive=" c ("False", "True") | solver == "TBPSA"
initial_popsize_factor "--initial_popsize_factor=" i (0, 20) | solver == "TBPSA"
multivariate_optimizer "--multivariate_optimizer=" c ("CMA-ES","OnePlusOne") | solver == "MetaModel"
method "--method=" c ("Nelder-Mead", "COBYLA", "SLSQP", "Powell") | solver == "Scipy" # Break down algorithms as solver
random_restart "--random_restart=" c ("False", "True") | solver == "Scipy"
noise_handling "--noise_handling=" c ("random", "optimistic") | solver == "OnePlusOne"
mutation "--mutation=" c ("gaussian", "cauchy", "discrete", "discreteBSO", "fastga", "doublefastga", "portfolio", "lengler") | solver == "OnePlusOne"
crossover "--crossover=" c ("False", "True") | solver == "OnePlusOne"
use_pareto "--use_pareto=" c ("False", "True") | solver == "OnePlusOne"
scale "--scale=" r (0.1, 10) | solver == "CMA-ES"
popsize_factor "--popsize_factor=" i (1,9) | solver == "CMA-ES"
elitist "--elitist=" c ("False", "True") | solver == "CMA-ES"
diagonal "--diagonal=" c ("True", "False") | solver == "CMA-ES"
fcmaes "--fcmaes=" c ("True", "False") | diagonal == "False"
random_init "--random_init=" c ("True", "False") | solver == "CMA-ES"

